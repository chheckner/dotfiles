# finds sub-directories with fuzzy finder and changes into them
fcd () {
	local dir
	dir=$(find "$PWD" -type d | fzf)
	[[ -n "$dir" ]] && cd "$dir"
}

# finds directories from ~/ and changes into them.
fhcd () {
	local dir
	dir=$(find "$HOME" -type d | fzf)
	[[ -n "$dir" ]] && cd "$dir"
}

# file information:
fl () {
	local maxdepth=${1:-2}
	local file
	file=$(find . maxdepth "$maxdepth" -type f 2>/dev/null | fzf)
	if
		[[ -n "$file" ]];then
		echo -e "\nls -l output:\n"
		ls -lh --color=auto "$file"
		echo -e "\nfile output:\n"
		file "$file"
	fi
}

# makes directory and changes into it.
mkcd() {
	mkdir -p "$1" && cd "$1"
}

# unpack archive

extract() {
	if [ -f "$1" ]; then
		case "$1" in
			*.tar.bz2) tar xjf "$1" ;;
			*.tar.gz) tar xzf "$1" ;;
			*.zip)    unzip "$1" ;;
			*) echo "'$1' can't be extracted" ;;
		esac
	else
		echo "'$1' isn't a file"
	fi
}


# search history with fzf and print command (works in bash and zsh)

gh() {
	local selected query
	query=$1
	if [[ -z "$query" ]];then
	read -rp "search: " query
	fi
	selected=$(history 1000 | grep -iE "\b${query}\b" | sed 's/ *[0-9]* *//' | fzf --no-sort --tac --prompt="searching: " )
	[[ -z "$selected" ]] && return

	if [[ -n "$ZSH_VERSION" ]]; then
		print -z -- "$selected"
	elif [[ -n "$BASH_VERSION" ]]; then
		READLINE_LINE="$selected"
		READLINE_POINT=${#selected}
	fi
}
